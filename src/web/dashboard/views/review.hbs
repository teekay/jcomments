{{> hamburgerMenu }}
<main id="main" class="manage-comments">
    <section class="settings container">
        <!-- begin approved comments page header -->
        <header class="section-header has-search">
            <h1 class="heading-font">Awaiting Review ({{ reviewCount }})</h1>
            {{!!> commentsSearch }}
        </header>
        {{> commentsActions review=true }}
        <section class="settings-column comments">
            {{#each comments}}
            <div class="card awaiting-review">
                <input type="checkbox" id="comment-action-{{ id }}" name="comment-action" class="comment-single-select" value="{{ id }}">
                <div class="comment-info">
                    <span class="commenter-name">
                        {{#if author.email}}
                        <a href="mailto: {{ author.email }}">{{ author.name }}</a>
                        {{else}}
                        {{ author.name }}
                        {{/if}}
                    </span>
                    {{#if author.website}}
                    <span class="commenter-url"><a href="{{ author.website }}" target="_blank" rel="noreferrer"
                            title="Visit commenter's homepage">({{ author.website }})</a></span>
                    {{/if}}
                    commented <span title="{{ dateFormat postedAt 'llll' }}">{{ relativePostedAt }}</span>.
                </div>
                <div class="comment-info">
                    <span class="commenter-comment">{{ text }}</span>
                </div>
                <div class="comment-info">
                    on <span class="comment-post"><a href="{{ postUrl }}" target="_blank" rel="noreferrer"
                            title="Visit commented post">{{#if postTitle}}{{ postTitle }}{{else}}{{ postUrl }}{{/if}}</a></span>
                </div>
                <div class="manage-comment">
                    <button data-id="{{ id }}" title="approve comment" class="btn approve"><img class="icon icon-small"
                        src="/assets/images/icons/checkmark.svg" alt=""></button>
                    <button data-id="{{ id }}" 
                            title="delete comment" class="btn delete"><img class="icon icon-small"
                            src="/assets/images/icons/trash.svg" alt=""></button>
                </div>
            </div>
            {{/each}}
            {{#unless comments}}
            <p>There's nothing for you to review at the moment.</p>
            {{/unless}}
            {{#if comments}}
        </section>

        <footer class="section-footer container">
            <ol class="paginate-comments">
                <li class="paginate previous{{#if onFirstPage }} disabled{{/if}}">
                    <a href="/dashboard/review?page={{ prevPage }}"{{#if onFirstPage }} tabindex="-1" aria-disabled="true"{{/if}}>previous</a>
                </li>
                {{#each pages}}
                <li class="paginate"><a class="{{#is this ../page}}active{{/is}}" href="/dashboard/review?page={{ this }}">{{ this }}</a></li>
                {{/each}}
                <li class="paginate next{{#if onLastPage }} disabled{{/if}}">
                    <a href="/dashboard/review?page={{ nextPage }}"{{#if onLastPage }} tabindex="-1" aria-disabled="true"{{/if}}>next</a>
                </li>
            </ol>
        </footer>
        {{/if}}        
    </section>
</main>

{{> modalDeleteComment }}
{{> modalDeleteComments }}
{{> modalApproveComments }}

<script src="/js/delete-comment-modal.js"></script>
<script>
  deleteCommentModal('.delete', '/dashboard/spam/delete')();
</script>
<script>
  document.querySelectorAll('.approve').forEach(el => {
    el.addEventListener('click', function(ev) {
      let token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      let element = ev.target.parentNode;
      let id = element.getAttribute('data-id');
      if (!id) return;

      fetch('/dashboard/spam/unmark', {
        method: 'POST',
        body: JSON.stringify({ id }),
        headers: {
          'CSRF-Token': token,
          'content-type': 'application/json'
        }
      }).then(response => {
        if (response.status === 201) {
          document.location = document.location;
          return;
        }
        console.error(response.status);
      });
    });
  })

  
</script>